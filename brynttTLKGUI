
local player = game.Players.LocalPlayer local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/thanhdat4461/OrionMoblie/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Orion", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"}) local Window = OrionLib:MakeWindow({Name = "Bryntt's Gui", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"}) --[[ Name = - The name of the UI. HidePremium = - Whether or not the user details shows Premium status or not. SaveConfig = - Toggles the config saving in the UI. ConfigFolder = - The name of the folder where the configs are saved. IntroEnabled = false - Whether or not to show the intro animation. IntroText = - Text to show in the intro animation. IntroIcon = - URL to the image you want to use in the intro animation. Icon = - URL to the image you want displayed on the window. CloseCallback = - Function to execute when the window is closed. ]] local Tab = Window:MakeTab({ Name = "Script", Icon = "rbxassetid://4483345998", PremiumOnly = false }) --[[ Name = - The name of the tab. Icon = - The icon of the tab. PremiumOnly = - Makes the tab accessible to Sirus Premium users only. ]] local Section = Tab:AddSection({ Name = "LocalPlayer" }) --[[ Name = - The name of the section. ]] OrionLib:MakeNotification({ Name = "Welcome!", Content = "Welcome to my hub!", Image = "rbxassetid://4483345998", Time = 5 }) --[[ Title = - The title of the notification. Content = - The content of the notification. Image = - The icon of the notification. Time = - The duration of the notfication. ]] 

Tab:AddButton({
	Name = "No Cooldown",
	Callback = function()
g = hookfunction(wait, function(seconds) return g(0) end)
      		print("button pressed")
  	end    
})

--[[
Nam
e = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Get perm Food",
	Callback = function()
while wait(0.5) do fireclickdetector(game.Workspace.Food.Main.ClickDetector) end
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name
 of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Kill Aura(hold axe)",
	Callback = function()
local lp = game:FindFirstChildOfClass("Players").LocalPlayer
local chr = lp.Character
while chr["Right Arm"] and wait(0.25) do
local lowest = math.huge
local NearestPlayer = nil
for _,plr in pairs(game:FindFirstChildOfClass("Players"):GetPlayers()) do
    if plr ~= lp and plr.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 and plr.Team ~= lp.Team and not lp:IsFriendsWith(plr.UserId) then
        local distance = plr:DistanceFromCharacter(chr.HumanoidRootPart.Position)
        if distance < lowest then
            lowest = distance
            NearestPlayer = {plr}
        end
    end
end
for i,v in pairs(NearestPlayer) do
local args = {
    [1] = chr,
    [2] = v.Character.HumanoidRootPart,
    [3] = chr:FindFirstChildOfClass("Tool")
}
wait()
game:GetService("ReplicatedStorage"):WaitForChild("Combat"):FireServer(unpack(args))
end
end

      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Open Door Aura",
	Callback = function()
while wait(0.1) do local args = {
    [1] = "Door1",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door2",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door3",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door4",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door5",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door6",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door7",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door8",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door9",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door10",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door12",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
local args = {
    [1] = "Door13",
    [2] = "Open"
}

game:GetService("ReplicatedStorage"):WaitForChild("DoorOpener"):FireServer(unpack(args))
end
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Drop Flashlights",
	Callback = function()
local lp = game:FindFirstChildOfClass("Players").LocalPlayer
for i=1,20 do
fireclickdetector(workspace["Flashlight"].ClickDetector)
for i,v in lp.Backpack:GetChildren() do if v.Name=="Flashlight" then
        v.Parent = lp.Character
end end
fireclickdetector(workspace["Flashlight"].ClickDetector)
wait()
for i,v in lp.Character:GetChildren() do if v.Name=="Flashlight" then
        v.Parent = workspace
end end
end
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Drop Food",
	Callback = function()
local lp = game:FindFirstChildOfClass("Players").LocalPlayer
for i=1,20 do
fireclickdetector(workspace["Food"].Main.ClickDetector)
for i,v in lp.Backpack:GetChildren() do if v.Name=="Food" then
        v.Parent = lp.Character
end end
fireclickdetector(workspace["Food"].Main.ClickDetector)
wait()
for i,v in lp.Character:GetChildren() do if v.Name=="Food" then
        v.Parent = workspace
end end
end

      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Auto Heal",
	Callback = function()
Autoheal = true
plr = game:FindFirstChildOfClass("Players").LocalPlayer
    while Autoheal and wait(0.5) do
        local hp = plr.character.Humanoid.Health
        if hp ~= 100 then
            local food = plr.Backpack:FindFirstChild("Food")
            local old = plr.character:FindFirstChildOfClass("Tool")
            
            plr.character.Humanoid:EquipTool(food)
            plr.character.Food:Activate()
            
            wait()
            
            if old ~= nil then
                plr.character.Humanoid:EquipTool(old)
                end
            end
        end
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Lag Server(will also lag u)",
	Callback = function()
game:FindFirstChildOfClass("RunService").Heartbeat:Connect(function()
local args = {
    [1] = 46,
    [2] = 13352926142,
    [3] = "Bobux Blaster",
    [4] = "13352926142"
}

game:GetService("ReplicatedStorage"):WaitForChild("Import"):FireServer(unpack(args))
end)
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Tab = Window:MakeTab({
	Name = "Extra useful scripts",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddButton({
	Name = "Keyboard",
	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/GGH52lan/GGH52lan/main/keyboard.txt"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "fly gui",
	Callback = function()
-- fly gui modded --

local main = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local up = Instance.new("TextButton")
local down = Instance.new("TextButton")
local onof = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local plus = Instance.new("TextButton")
local speed = Instance.new("TextLabel")
local mine = Instance.new("TextButton")
local closebutton = Instance.new("TextButton")
local mini = Instance.new("TextButton")
local mini2 = Instance.new("TextButton")

main.Name = "main"
main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
main.ResetOnSpawn = false

Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)
Frame.Size = UDim2.new(0, 190, 0, 57)

up.Name = "up"
up.Parent = Frame
up.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
up.Size = UDim2.new(0, 44, 0, 28)
up.Font = Enum.Font.SourceSans
up.Text = "↑"
up.TextColor3 = Color3.fromRGB(0, 0, 0)
up.TextSize = 14.000

down.Name = "down"
down.Parent = Frame
down.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
down.Position = UDim2.new(0, 0, 0.491228074, 0)
down.Size = UDim2.new(0, 44, 0, 28)
down.Font = Enum.Font.SourceSans
down.Text = "↓"
down.TextColor3 = Color3.fromRGB(0, 0, 0)
down.TextSize = 14.000

onof.Name = "onof"
onof.Parent = Frame
onof.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)
onof.Size = UDim2.new(0, 56, 0, 28)
onof.Font = Enum.Font.Michroma
onof.Text = "FLY"
onof.TextColor3 = Color3.fromRGB(0, 0, 0)
onof.TextSize = 14.000

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 100, 0, 28)
TextLabel.Font = Enum.Font.Michroma
TextLabel.Text = "Fly gui modded"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

plus.Name = "plus"
plus.Parent = Frame
plus.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
plus.Position = UDim2.new(0.231578946, 0, 0, 0)
plus.Size = UDim2.new(0, 45, 0, 28)
plus.Font = Enum.Font.SourceSans
plus.Text = "+"
plus.TextColor3 = Color3.fromRGB(0, 0, 0)
plus.TextScaled = true
plus.TextSize = 14.000
plus.TextWrapped = true

speed.Name = "speed"
speed.Parent = Frame
speed.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)
speed.Size = UDim2.new(0, 44, 0, 28)
speed.Font = Enum.Font.SourceSans
speed.Text = "1"
speed.TextColor3 = Color3.fromRGB(0, 0, 0)
speed.TextScaled = true
speed.TextSize = 14.000
speed.TextWrapped = true

mine.Name = "mine"
mine.Parent = Frame
mine.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)
mine.Size = UDim2.new(0, 45, 0, 29)
mine.Font = Enum.Font.SourceSans
mine.Text = "-"
mine.TextColor3 = Color3.fromRGB(0, 0, 0)
mine.TextScaled = true
mine.TextSize = 14.000
mine.TextWrapped = true

closebutton.Name = "Close"
closebutton.Parent = main.Frame
closebutton.BackgroundColor3 = Color3.fromRGB(255, 5, 5)
closebutton.Font = "Michroma"
closebutton.Size = UDim2.new(0, 45, 0, 28)
closebutton.Text = "x"
closebutton.TextSize = 30
closebutton.Position =  UDim2.new(0, 0, -1, 27)

mini.Name = "minimize"
mini.Parent = main.Frame
mini.BackgroundColor3 = Color3.fromRGB(117, 117, 117)
mini.Font = "Michroma"
mini.Size = UDim2.new(0, 45, 0, 28)
mini.Text = "-"
mini.TextSize = 40
mini.Position = UDim2.new(0, 44, -1, 27)

mini2.Name = "minimize2"
mini2.Parent = main.Frame
mini2.BackgroundColor3 = Color3.fromRGB(117, 117, 117)
mini2.Font = "SourceSans"
mini2.Size = UDim2.new(0, 45, 0, 28)
mini2.Text = "+"
mini2.TextSize = 40
mini2.Position = UDim2.new(0, 44, -1, 57)
mini2.Visible = false

speeds = 1

local speaker = game:GetService("Players").LocalPlayer

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

nowe = false

game:GetService("StarterGui"):SetCore("SendNotification", { 
	Title = "FLY GUI MODDED(bryntt)";
	Text = "Fly gui Modded  by bryntt";
	Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
Duration = 5;

Frame.Active = true -- main = gui
Frame.Draggable = true

onof.MouseButton1Down:connect(function()

	if nowe == true then
		nowe = false

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	else 
		nowe = true



		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	


				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
		game.Players.LocalPlayer.Character.Animate.Disabled = true
		local Char = game.Players.LocalPlayer.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(0)
		end
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
	end




	if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then



		local plr = game.Players.LocalPlayer
		local torso = plr.Character.Torso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new("BodyGyro", torso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = torso.CFrame
		local bv = Instance.new("BodyVelocity", torso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			game:GetService("RunService").RenderStepped:Wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end
			--	game.Players.LocalPlayer.Character.Animate.Disabled = true
			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false




	else
		local plr = game.Players.LocalPlayer
		local UpperTorso = plr.Character.UpperTorso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new("BodyGyro", UpperTorso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = UpperTorso.CFrame
		local bv = Instance.new("BodyVelocity", UpperTorso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end

			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false



	end





end)

local tis

up.MouseButton1Down:connect(function()
	tis = up.MouseEnter:connect(function()
		while tis do
			wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1,0)
		end
	end)
end)

up.MouseLeave:connect(function()
	if tis then
		tis:Disconnect()
		tis = nil
	end
end)

local dis

down.MouseButton1Down:connect(function()
	dis = down.MouseEnter:connect(function()
		while dis do
			wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-1,0)
		end
	end)
end)

down.MouseLeave:connect(function()
	if dis then
		dis:Disconnect()
		dis = nil
	end
end)


game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
	wait(0.7)
	game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
	game.Players.LocalPlayer.Character.Animate.Disabled = false

end)


plus.MouseButton1Down:connect(function()
	speeds = speeds + 1
	speed.Text = speeds
	if nowe == true then


		tpwalking = false
		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	


				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
	end
end)
mine.MouseButton1Down:connect(function()
	if speeds == 1 then
		speed.Text = '-1 speed fly bruh'
		wait(1)
		speed.Text = speeds
	else
		speeds = speeds - 1
		speed.Text = speeds
		if nowe == true then
			tpwalking = false
			for i = 1, speeds do
				spawn(function()

					local hb = game:GetService("RunService").Heartbeat	


					tpwalking = true
					local chr = game.Players.LocalPlayer.Character
					local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
					while tpwalking and hb:Wait() and chr and hum and hum.Parent do
						if hum.MoveDirection.Magnitude > 0 then
							chr:TranslateBy(hum.MoveDirection)
						end
					end

				end)
			end
		end
	end
end)

closebutton.MouseButton1Click:Connect(function()
	main:Destroy()
end)

mini.MouseButton1Click:Connect(function()
	up.Visible = false
	down.Visible = false
	onof.Visible = false
	plus.Visible = false
	speed.Visible = false
	mine.Visible = false
	mini.Visible = false
	mini2.Visible = true
	main.Frame.BackgroundTransparency = 1
	closebutton.Position =  UDim2.new(0, 0, -1, 57)
end)

mini2.MouseButton1Click:Connect(function()
	up.Visible = true
	down.Visible = true
	onof.Visible = true
	plus.Visible = true
	speed.Visible = true
	mine.Visible = true
	mini.Visible = true
	mini2.Visible = false
	main.Frame.BackgroundTransparency = 0 
	closebutton.Position =  UDim2.new(0, 0, -1, 27)
end)
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local Tab = Window:MakeTab({
	Name = "GUI",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddButton({
	Name = "Red Gui(fix)",
	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/RedZenXYZ/RedHub/main/Red_GuiScript"))()

local Plr = game:GetService("Players").LocalPlayer

local Places = {
	["Outside"] = CFrame.new(237, 3, -106),
	["Prison"] = CFrame.new(77, 3, -104),
	["Basement"] = CFrame.new(468, -6, -89),
	["Burger"] = CFrame.new(235, 3, -598)
}

local WeaponsName = {
	"Axe",
	"Pickaxe",
	"Fist",
	"Bat",
	"Knife",
	"Hammer",
	"Bag",
	"Pliers",
	"Handsaw",
	"Screwdriver",
	"Crowbar",
	"PoliceBaton"
}

RedGui()
createPage("Combat")

addToggle("Attack", function()
	for _, weapon in pairs(Plr.Backpack:GetChildren()) do
		if table.find(WeaponsName, weapon.Name) then
			Equip(weapon)
		end
	end
	for _, weapon in pairs(Plr.Character:GetChildren()) do
		if weapon:IsA("Tool") then
			weapon:Activate()
		end
	end
end)

addToggle("Heal", function()
	if Plr.Character:FindFirstChildOfClass("Humanoid").Health <= 90 then
		if Plr.Character:FindFirstChild("Hamburger") and not Plr.Backpack:FindFirstChild("Hamburger") then
			game:GetService("ReplicatedStorage"):FindFirstChild("EatingEvent"):FireServer(Plr.Character, Plr.Character:FindFirstChild("Hamburger"), "Heal")
			Plr.Character:FindFirstChild("Hamburger").Parent = Plr.Backpack
		elseif not Plr.Character:FindFirstChild("Hamburger") and Plr.Backpack:FindFirstChild("Hamburger") then
			Equip("Hamburger")
		elseif not Plr.Character:FindFirstChild("Hamburger") and not Plr.Backpack:FindFirstChild("Hamburger") then
			FireClick(workspace.Hamburger)
		end
	end
end)

addToggle("Instant Undo", function()
	game:GetService("ReplicatedStorage"):WaitForChild("IsHog"):FireServer(Plr.Character, "UnHog")
	game:GetService("ReplicatedStorage"):WaitForChild("UnCuffed"):FireServer(Plr.Character)
	game:GetService("ReplicatedStorage"):WaitForChild("CollarRemove"):FireServer(Plr.Character, "Collar")
	for i,con in next,getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Avatar.Undo.MouseButton1Click) do
		spawn(con.Function)
	end
end)

createPage("Aura")

local KillAuraDistance = addTextBox("30", "Kill Aura Distance")

addToggle("Kill Aura", function()
	local MaxDistance = tonumber(KillAuraDistance.Text)
	for _, Target in next,getPlayer("nearest", {["Team"] = true, ["Distance"] = MaxDistance}) do
		for _, weapon in pairs(Plr.Character:GetChildren()) do
			if weapon:IsA("Tool") then
				game:GetService("ReplicatedStorage").Combat:FireServer(Plr.Character, Target.Character.Head, weapon)
			end
		end
	end
end)

local TaseAuraDistance = addTextBox("10", "Tase Aura Distance")

addToggle("Tase Aura", function()
	local MaxDistance = tonumber(TaseAuraDistance.Text)
	for _, Target in next,(getPlayer("others", {["Team"] = true, ["Distance"] = MaxDistance})) do
		game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer("Hit", game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Taser"), Target.Character.Torso)
		game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer("Recharge", game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Taser"))
	end
end)

addToggle("Cuffs Aura", function()
	for _, Target in next,(getPlayer("others", {["Team"] = true})) do
		spawn(function()
			pcall(function()
				for _, cuffs in pairs(Plr.Backpack:GetChildren()) do
					if cuffs.Name:find("Handcuffs") then
						spawn(function()
							pcall(function()
								game:GetService("ReplicatedStorage"):FindFirstChild("IsCuffed"):FireServer(cuffs, Target.Character)
							end)
						end)
					end
				end
			end)
		end)
	end
end)

addToggle("Rope Aura", function()
	for _, Target in next,(getPlayer("others", {["Team"] = true})) do
		spawn(function()
			pcall(function()
				game:GetService("ReplicatedStorage"):FindFirstChild("IsHog"):FireServer(Target.Character, "Hog")
			end)
		end)
	end
end)

addToggle("Grab Aura", function()
	for _, Target in next,(getPlayer("others", {["Team"] = true})) do
		spawn(function()
			pcall(function()
				game:GetService("ReplicatedStorage"):FindFirstChild("Grab"):FireServer(Target.Character, "Grab")
			end)
		end)
	end
end)

createPage("Tools")

addButton("Get Hamburger", function()
	Dupe("Hamburger", workspace.Hamburger)
end)

addButton("Get Weapons", function()
	for i,v in pairs(workspace:GetDescendants()) do
		if v:IsA("Tool") and v:FindFirstChildOfClass("ClickDetector") then
			FireClick(v)
		end
	end
	for i,v in pairs(workspace:GetDescendants()) do
		if v.Name == "Broom" or v.Name == "Collar" or v.Name == "Bat" or v.Name == "Food" or v.Name == "BlindFold" then
			for i, click in pairs(v:GetDescendants()) do
				if click:IsA("ClickDetector") then
					fireclickdetector(click)
				end
			end
		end
	end
end)

createPage("Teleports")

for name, cframe in pairs(Places) do
	addButton(name, function()
		Teleport(cframe)
	end)
end

createPage("Others")

addButton("Close Choosing UI", function()
	if Plr.PlayerGui.Menu.TeamMenu.Visible == true then
		Plr.PlayerGui.Menu.TeamMenu.Visible = false
		Plr.PlayerGui.Menu.OpenAndClose.Visible = true
		Plr.PlayerGui.Stamina.StaminaBarFrame.Visible = true
		Plr.PlayerGui.Schedule.CurrentSchedule.Visible = true
		Plr.PlayerGui.VoteKickPanel.OpenCloseButton.Visible = true
		Plr.PlayerGui.Animation.Enabled = true
		Plr.PlayerGui.Hostile.Hostile.Visible = true
		Plr.PlayerGui.Hostile.Status.Visible = true
		Plr.PlayerGui.Hostile.Status.ZIndex = 0
	elseif Plr.PlayerGui.Menu.TeamMenu.Visible == false then
		Plr.PlayerGui.Menu.TeamMenu.Visible = true
		Plr.PlayerGui.Menu.OpenAndClose.Visible = false
		Plr.PlayerGui.Stamina.StaminaBarFrame.Visible = false
		Plr.PlayerGui.Schedule.CurrentSchedule.Visible = false
		Plr.PlayerGui.VoteKickPanel.OpenCloseButton.Visible = false
		Plr.PlayerGui.Animation.Enabled = false
		Plr.PlayerGui.Hostile.Hostile.Visible = false
		Plr.PlayerGui.Hostile.Status.Visible = false
		Plr.PlayerGui.Hostile.Status.ZIndex = 0
	end
end)

addButton("No Jump Limit", function()
	Plr.Character.JumpLimit:Destroy()
end)

addButton("Free Import Gamepass", function()
	local Old;
	Old = hookmetamethod(game, "__namecall", function(...)
	   if not checkcaller() and getnamecallmethod() == "UserOwnsGamePassAsync" then
	       return true
	   end
	   return Old(...)
	end)
end)

createPage("Modding Tool")

addButton("Taser", function()
	game:GetService("Players").LocalPlayer.Character.Taser.Activated:Connect(function()
		pcall(function()
			local mouse = game:GetService("Players").LocalPlayer:GetMouse()
			local CFRAME = mouse.hit
			local Target = mouse.target
			local pos = Vector3.new(CFRAME.X, CFRAME.Y, CFRAME.Z)
			
			game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer("Hit", game:GetService("Players").LocalPlayer.Character:FindFirstChild("Taser"), Target.Parent.Torso)
			game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer("Generate", game:GetService("Players").LocalPlayer.Character.Taser, game:GetService("Players").LocalPlayer.Character.Taser.Handle.Position, pos)
			game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer("Recharge", game:GetService("Players").LocalPlayer.Character:FindFirstChild("Taser"))
		end)
	end)
end)

workspace.FallenPartsDestroyHeight = -50000

function Teleport(CFrame)
	Plr.Character:FindFirstChild("HumanoidRootPart").CFrame = CFrame
end

function FireClick(Part)
	if Part:FindFirstChildOfClass("ClickDetector") then
		fireclickdetector(Part:FindFirstChildOfClass("ClickDetector"))
	end
end

function Dupe(ToolName, ClickPart)
	for _, tool in next,Plr.Backpack:GetChildren() do
		if tool.Name == ToolName then
			Equip(tool)
		end
	end
	
	FireClick(ClickPart)
end

function Equip(Name)
	if typeof(Name) == "string" then
		if Plr.Backpack:FindFirstChild(Name) then
			Plr.Backpack:FindFirstChild(Name).Parent = Plr.Character
		end
	elseif Name:IsA("Tool") then
		Name.Parent = Plr.Character
	end
end

function GetPlayersTeam()
	local TeamCheckedPlayers = {}
	for _, plr in pairs(game.Players:GetPlayers()) do
		if plr ~= game.Players.LocalPlayer and plr.Team ~= game.Players.LocalPlayer.Team then
			table.insert(TeamCheckedPlayers, plr)
		end
	end
	
	return TeamCheckedPlayers
end

function GetUnBlockingPlayers(Check, Pos)
	local player = game.Players.LocalPlayer
	if Check == true then
		players = GetPlayersTeam()
	else
		players = game.Players:GetPlayers()
	end
	
	local LocalCharacter = game:GetService("Players").LocalPlayer.Character
	local Players = {}
	for _, plr in pairs(players) do
		if plr ~= player and plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
			local Ray = Ray.new(Pos, (plr.Character.PrimaryPart.Position - Pos))
			local part = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray, {LocalCharacter})
			if part ~= nil then
				if part:IsDescendantOf(plr.Character) then
					table.insert(Players, plr)
				end
			end
		end
	end
	
	return Players
end

function getPlayer(String, Information)
	local Info = {
		["Raycasting"] = false,
		["Team"] = false,
		["Position"] = game:GetService("Players").LocalPlayer.Character.PrimaryPart.Position,
		["Distance"] = math.huge
	}
	if Information ~= nil then
		for name, value in pairs(Information) do
			if Info[name] ~= nil then
				Info[name] = value
			end
		end
	end
	if Info["Raycasting"] == true and Info["Team"] == true then
		players = GetUnBlockingPlayers(true, Info["Position"])
	elseif Info["Raycasting"] == true and Info["Team"] == false then
		players = GetUnBlockingPlayers(false, Info["Position"])
	elseif Info["Team"] == true and Info["Raycasting"] == false then
		players = GetPlayersTeam()
	else
		players = game:GetService("Players"):GetPlayers()
	end
	local Found = {}
	local strl = String:lower()
	if strl == "" then
		return
	elseif strl == "all" then
		for i,v in pairs(players) do
			pcall(function()
				if (game.Players.LocalPlayer.Character.PrimaryPart.Position - v.Character.PrimaryPart.Position).magnitude <= Info["Distance"] then
					table.insert(Found, v)
				end
			end)
		end
	elseif strl == "others" then
		for i,v in pairs(players) do
			if v ~= game:GetService("Players").LocalPlayer and (game.Players.LocalPlayer.Character.PrimaryPart.Position - v.Character.PrimaryPart.Position).magnitude <= Info["Distance"] then
				table.insert(Found, v)
			end
		end
	elseif strl == "me" then
		table.insert(Found, game:GetService("Players").LocalPlayer)
	elseif strl == "random" then
		local localplayer = game:GetService("Players").LocalPlayer
		local playersTable = {}
		for _, plr in pairs(players) do
			pcall(function()
				if plr ~= localplayer and (game.Players.LocalPlayer.Character.PrimaryPart.Position - plr.Character.PrimaryPart.Position).magnitude <= Info["Distance"] then
					table.insert(playersTable, plr)
				end
			end)
		end
		table.insert(Found, playersTable[math.random(1, #playersTable)])
	elseif strl == "nearest" then
		local player = game:GetService("Players").LocalPlayer
		if player.Character then
			character = player.Character
			ohVector32 = character.PrimaryPart.Position
		else
			return
		end
		local closestPlayer, closestDistance
		for _, p in pairs(players) do
			if p ~= player and p.Character and p.Character:FindFirstChildOfClass("Humanoid") and p.Character:FindFirstChildOfClass("Humanoid").Health ~= 0 then
				local distance = (ohVector32 - p.Character.PrimaryPart.Position).Magnitude
				if not closestDistance or distance < closestDistance then
					closestDistance = distance
					closestPlayer = p
				end
			end
		end
		if closestPlayer then
			table.insert(Found, closestPlayer)
		end
	else
		for i,v in pairs(players) do
			if (v.Name:lower():sub(1, #String) == String:lower() or v.DisplayName:lower():sub(1, #String) == String:lower()) and (game.Players.LocalPlayer.Character.PrimaryPart.Position - v.Character.PrimaryPart.Position).magnitude <= Info["Distance"] then
				table.insert(Found, v)
			end
		end
	end
	
	return Found    
end
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

OrionLib:Init()
